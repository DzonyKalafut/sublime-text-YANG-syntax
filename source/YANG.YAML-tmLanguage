# [PackageDev] target_format: plist, ext: tmLanguage
---
name: YANG
scopeName: source.yang
fileTypes: [yang]
uuid: 6d38bd0e-cb6f-4f02-870f-9384bad6762a

patterns:
- name: comment.line.source.yang
  match:  (//.+)

- name: comment.block.source.yang
  begin:  (/\*)
  end: (\*/)

- name: string.quoted.source.yang
  begin: (")
  end: (")

- name: string.quoted.source.yang
  begin: (')
  end: (')

- match: (\s+)(anyxml|argument|augment|base|belongs-to|bit|case|choice|config|contact|container|default|description|enum|error-app-tag|error-message|extension|deviation|deviate|feature|fraction-digits|grouping|identity|if-feature|import|include|input|key|leaf|leaf-list|length|list|mandatory|max-elements|min-elements|module|must|namespace|ordered-by|organization|output|path|pattern|position|prefix|presence|range|reference|refine|require-instance|revision|revision-date|status|submodule|type|typedef|unique|units|uses|value|when|yang-version|yin-element)(\s+)
  captures: 
    '2': {name: keyword.source.yang}

- name: storage.type.source.yang
  match: (decimal64|int8|int16|int32|int64|uint8|uint16|uint32|uint64|string|boolean|enumeration|bits|binary|leafref|identityref|empty|instance-identifier)

- name: constant.language.source.yang
  match: (true|false)

- match: (\d+)
  captures:
    '1': {name: constant.numeric.source.yang}

- match: (rpc|notification)(\s+)([\w-_\d]+)
  captures: 
    '1': {name: keyword.source.yang}
    '3': {name: entity.name.function.source.yang}    
...